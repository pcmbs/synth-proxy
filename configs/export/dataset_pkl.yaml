# @package _global_

# Config file for the synthetic preset datasets generation.
# Associated code can be found in src/export/dataset_pkl.py

defaults:
  - _self_ 
  - synth: ???

############ Export path Settings
# Path relative to the project root where the dataset will be exported
export_relative_path: data/datasets

# tag to be appended to the generated folder (must be provided by the user)
tag: ???


### SynthDataset settings

# dataset size: 
# For MMR validation dataset: need to be num_eval * num_preds_per_eval
# e.g., for 128 evaluations and 512 predictions per eval we have 128 * 512 = 64_512 samples
# For the test set: arbitrary since we use the one-vs-all approach
dataset_size: 65_536

# start index of the dataset
# Can be used to generate a subset of the dataset if set together with dataset_size
# in order to generate a dataset simultaneously on several machines (see cat_dataset_pkl.yaml)
# Ex: start_index=0 and dataset_size=64_512 will generate the first 64_512 samples while
#     start_index=64_512 and dataset_size=64_512 will generate the second 64_512 samples, etc.
start_index: 0 # inclusive
end_index: ${dataset_size} # exclusive

# the following are used to instantiate a SynthDataset object (see implementation for details)
seed_offset: 45_858
render_duration_in_sec: 5.0
midi_note: 60
midi_velocity: 100
midi_duration_in_sec: 2.0

# batch size used to generate the dataset (to be set as high as possible)
batch_size: 128

# number of workers used to generate the dataset
num_workers: 8

# export the first i samples if int, set to -1 to export all, and set to 0 to skip
export_audio: 0

############ Audio model settings
# pre-trained audio model used as feature extractor to generate the labels
audio_fe: mn04

############ Hydra stuff
# disable output directory
root_dir: ${oc.env:PROJECT_ROOT}

hydra:
  output_subdir: null
  run:
    dir: ${root_dir}/${export_relative_path}/${synth.name}_${audio_fe}_size=${dataset_size}_seed=${seed_offset}_${tag}

  job: 
    chdir: True

  job_logging:
    handlers:
      file:
        filename: ${hydra.runtime.output_dir}/infos.log
    formatters:
      simple:
        format: '%(message)s'
